<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon Xie</title>
  <icon>https://www.gravatar.com/avatar/32db771918c67cb8f4969f34b77012cf</icon>
  <subtitle>All magic comes with a price.</subtitle>
  <link href="https://blog.codewalker.me/atom.xml" rel="self"/>
  
  <link href="https://blog.codewalker.me/"/>
  <updated>2023-04-21T15:13:41.231Z</updated>
  <id>https://blog.codewalker.me/</id>
  
  <author>
    <name>Simon Xie</name>
    <email>simon.xie@codewalker.me</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>tips in shell script</title>
    <link href="https://blog.codewalker.me/2023/04/21/tips-in-shell-script/"/>
    <id>https://blog.codewalker.me/2023/04/21/tips-in-shell-script/</id>
    <published>2023-04-21T14:57:44.000Z</published>
    <updated>2023-04-21T15:13:41.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Simple-shell-script"><a href="#Simple-shell-script" class="headerlink" title="Simple shell script"></a>Simple shell script</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span>  <span class="built_in">command</span> -v docker &gt; /dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;docker installed&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  curl -fsSL https://get.docker.com | sudo bash</span><br><span class="line">  systemctl <span class="built_in">enable</span> --now docker</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Shell scripts are an essential part of Linux systems, providing a way to automate tasks and execute commands in a systematic and efficient manner. In this article, we will discuss the issues related to a specific shell script that checks whether Docker is installed or not, and installs it if it’s not already present.</p><h2 id="Shell-Script-Overview"><a href="#Shell-Script-Overview" class="headerlink" title="Shell Script Overview"></a>Shell Script Overview</h2><p>The script starts by declaring the shebang line <code>#!/bin/bash</code>, which indicates that it will be executed using the Bash shell. The next line checks whether the <code>docker</code> command is available by using the <code>command</code> utility, which searches the system path for the command and returns its status. The <code>&gt; /dev/null 2&gt;&amp;1</code> redirects the standard output and error messages to the null device, effectively suppressing any output from the command.</p><p>If the <code>docker</code> command is found, the script echoes ‘docker installed’ to the console. However, if the command is not found, the script downloads and installs Docker by executing the <code>curl</code> command and piping its output to the bash command with root privileges using <code>sudo</code>. Finally, the <code>systemctl</code> command is used to enable and start the Docker service.</p><h2 id="Issues-and-Solutions"><a href="#Issues-and-Solutions" class="headerlink" title="Issues and Solutions"></a>Issues and Solutions</h2><p>The above script is a simple yet useful way to ensure that Docker is installed on a Linux system. However, there are some issues that should be considered:</p><ol><li><p>Security risks: Downloading and executing scripts from the internet using root privileges can be risky, as it can potentially expose the system to malware or other security vulnerabilities. One solution to mitigate this risk is to download and inspect the script manually before executing it.</p></li><li><p>Error handling: The script does not provide any error handling for the <code>curl</code> or <code>systemctl</code> commands, which could lead to unexpected results or failure to install Docker. One solution is to use the <code>set -e</code> option at the beginning of the script, which will cause it to exit immediately if any command returns a non-zero status.</p></li><li><p>Compatibility issues: The script assumes that the system is running a version of Linux that supports the <code>systemctl</code> command. However, this may not be the case for some older distributions or non-Linux systems. In these cases, an alternative command should be used to start and enable the Docker service.</p></li></ol><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>In summary, shell scripts are a powerful tool for automating tasks and executing commands on Linux systems. However, it’s important to consider security risks, error handling, and compatibility issues when writing and executing scripts. The shell script presented in this article is a simple yet useful example of how to install Docker if it’s not already present, but it can be improved by addressing the issues discussed above.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Simple-shell-script&quot;&gt;&lt;a href=&quot;#Simple-shell-script&quot; class=&quot;headerlink&quot; title=&quot;Simple shell script&quot;&gt;&lt;/a&gt;Simple shell script&lt;/h2&gt;&lt;figu</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.codewalker.me/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.codewalker.me/tags/Linux/"/>
    
    <category term="Shell" scheme="https://blog.codewalker.me/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>fix unable to access github.git when brew update</title>
    <link href="https://blog.codewalker.me/2023/04/20/fix-unable-to-access-github-git-when-brew-update/"/>
    <id>https://blog.codewalker.me/2023/04/20/fix-unable-to-access-github-git-when-brew-update/</id>
    <published>2023-04-19T16:18:31.000Z</published>
    <updated>2023-04-19T16:44:37.690Z</updated>
    
    <content type="html"><![CDATA[<p>If you have encountered the “brew update” problem where you see an error message like the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access <span class="string">&#x27;https://github.com/caskroom/homebrew-cask/&#x27;</span>: Failed to connect to github.com port 443 after 75018 ms: Couldn<span class="string">&#x27;t connect to serve</span></span><br></pre></td></tr></table></figure><h1 id="summarize"><a href="#summarize" class="headerlink" title="summarize:"></a>summarize:</h1><ol><li><p>The error message you received indicates that Homebrew was not able to connect to the GitHub server. This can be caused by a number of factors, including network connectivity issues or server problems.</p></li><li><p>The first method provided involves modifying your Homebrew settings to use a mirror hosted by Tsinghua University in China. This mirror is typically faster and more reliable for users in mainland China.</p></li><li><p>To modify your Homebrew settings, you need to open your .bashrc or .zshrc file (depending on which shell you are using) and add the environment variables listed in the article. You can do this using a text editor or by running a command like nano ~&#x2F;.bashrc.</p></li><li><p>Once you’ve added the environment variables, you need to activate your .bashrc or .zshrc file by running the source command as shown in the article. This will ensure that the new settings take effect.</p></li><li><p>The -v option used in the brew update -v command stands for “verbose” and will show more detailed output as Homebrew updates. This can be helpful for troubleshooting or diagnosing problems.</p></li><li><p>In general, it’s a good idea to keep your Homebrew installation up to date to ensure that you have access to the latest versions of software packages. You can do this by running the brew update command periodically.</p></li></ol><p>Recently, there have been frequent issues with not being able to connect to GitHub when using update brew. Additionally, I have been using ChatGPT recently, so I tried to ask and resolved the issue. If you are in mainland China like me, you can refer to the following methods to modify Homebrew’s parameters:</p><h2 id="step-one"><a href="#step-one" class="headerlink" title="step one"></a>step one</h2><p>Open your .bashrc or .zshrc file and add the following environment variables:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HOMEBREW_API_DOMAIN=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;</span></span><br><span class="line"><span class="built_in">export</span> HOMEBREW_BOTTLE_DOMAIN=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;</span></span><br><span class="line"><span class="built_in">export</span> HOMEBREW_BREW_GIT_REMOTE=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span><br><span class="line"><span class="built_in">export</span> HOMEBREW_CORE_GIT_REMOTE=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span></span><br><span class="line"><span class="built_in">export</span> HOMEBREW_PIP_INDEX_URL=<span class="string">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span></span><br></pre></td></tr></table></figure><p>This will replace some of Homebrew’s default settings with the ones from the Tsinghua University mirror.</p><h2 id="step-two"><a href="#step-two" class="headerlink" title="step two"></a>step two</h2><p>Activate your .bashrc or .zshrc file by running:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>Once you’ve completed these steps, you can run the following command to update Homebrew:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew update -v</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;If you have encountered the “brew update” problem where you see an error message like the following:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="MacOS" scheme="https://blog.codewalker.me/categories/MacOS/"/>
    
    
    <category term="MacOS" scheme="https://blog.codewalker.me/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>[FIX] how to fix github submitt error</title>
    <link href="https://blog.codewalker.me/2023/04/04/fix-github-submitt-error/"/>
    <id>https://blog.codewalker.me/2023/04/04/fix-github-submitt-error/</id>
    <published>2023-04-03T18:10:13.000Z</published>
    <updated>2023-04-04T06:35:47.928Z</updated>
    
    <content type="html"><![CDATA[<p>test</p><p>ssh -vT <a href="mailto:&#x67;&#x69;&#116;&#x40;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#109;">&#x67;&#x69;&#116;&#x40;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#109;</a></p><p>Steps<br>在边栏的“访问”部分中，单击 “SSH 和 GPG 密钥”。</p><p>单击“新建 SSH 密钥”或“添加 SSH 密钥” 。<br>SSH 密钥按钮<br>在 “Title”（标题）字段中，为新密钥添加描述性标签。 例如，如果使用的是个人笔记本电脑，则可以将此密钥称为“个人笔记本电脑”。</p><p>选择密钥类型（身份验证或签名）。 有关提交签名的详细信息，请参阅“关于提交签名验证”。</p><p>将公钥粘贴到“密钥”字段。</p><p>单击“添加 SSH 密钥”。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;test&lt;/p&gt;
&lt;p&gt;ssh -vT &lt;a href=&quot;mailto:&amp;#x67;&amp;#x69;&amp;#116;&amp;#x40;&amp;#x67;&amp;#x69;&amp;#x74;&amp;#x68;&amp;#x75;&amp;#x62;&amp;#46;&amp;#99;&amp;#x6f;&amp;#109;&quot;&gt;&amp;#x67;&amp;#x69;&amp;#116</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.codewalker.me/categories/Linux/"/>
    
    
    <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
    <category term="inode" scheme="https://blog.codewalker.me/tags/inode/"/>
    
    <category term="logrotate" scheme="https://blog.codewalker.me/tags/logrotate/"/>
    
  </entry>
  
  <entry>
    <title>fix solrCloud A previous ephemeral live node still exists</title>
    <link href="https://blog.codewalker.me/2021/08/11/fix-solrCloud-A-previous-ephemeral-live-node-still-exists/"/>
    <id>https://blog.codewalker.me/2021/08/11/fix-solrCloud-A-previous-ephemeral-live-node-still-exists/</id>
    <published>2021-08-11T06:01:12.000Z</published>
    <updated>2021-08-11T06:30:01.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>I encountered a very strange bug when I was deploying a solr cluster as usual。</p><p>it said <code>A previous ephemeral live node st ill exists</code> when I’ve started another solr node via tomcat.</p><p>then login to zookeeper find out what happed. The <code>live_nodes</code> shows me this:<code>127.0.0.1:8080</code>.<br>what!!! why its name is like this?? As usual, it should be <code>realIP:port</code> not <strong>local ip</strong>.</p><h2 id="Let’s-fix-it"><a href="#Let’s-fix-it" class="headerlink" title="Let’s fix it"></a>Let’s fix it</h2><h3 id="step-one"><a href="#step-one" class="headerlink" title="step one"></a>step one</h3><p>Checking your <code>solr.xml</code> is corrate or not</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;str name=<span class="string">&quot;host&quot;</span>&gt;<span class="variable">$&#123;host:&#125;</span>&lt;/str&gt;</span><br></pre></td></tr></table></figure><p>this line should be var. Thus it will be named your host ip automatically when you star your solr node, registering in zookeeper.</p><h3 id="step-two"><a href="#step-two" class="headerlink" title="step two"></a>step two</h3><p>Here’s what I’v found in my case.<br>step one is right but why am I faild to start my solr node.</p><p>The Point is <code>/etc/hosts</code>, it records <code>127.0.0.1 xxxxhostnamexxx</code> at the top of this file.<br>and then at the bottom of this file it records <code>xxx.xxx.xxx.xxx xxxxhostnamexxx</code>, so I think that node name will be read line by line from top to bottom via tomcat from hosts this file.</p><p>Deleting this line <code>127xxxxxxxx</code>, then restart your nodes.<br>Logining and checking your node names in live_nodes of zookeeper.<br>Done.</p><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;I encountered a very strange bug w</summary>
      
    
    
    
    
    <category term="SolrCloud" scheme="https://blog.codewalker.me/tags/SolrCloud/"/>
    
    <category term="Linux" scheme="https://blog.codewalker.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Your CLT does not support macOS 11</title>
    <link href="https://blog.codewalker.me/2021/01/24/Your-CLT-does-not-support-macOS-11/"/>
    <id>https://blog.codewalker.me/2021/01/24/Your-CLT-does-not-support-macOS-11/</id>
    <published>2021-01-24T03:47:53.000Z</published>
    <updated>2021-01-24T03:55:56.049Z</updated>
    
    <content type="html"><![CDATA[<p>Fix [Your CLT does not support macOS 11] when you are updating&#x2F;upgrading brew</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -rf /Library/Developer/CommandLineTools</span><br><span class="line">sudo xcode-select --install</span><br></pre></td></tr></table></figure><p>then you will see something below by execute <code>pkgutil --pkg-info=com.apple.pkg.</code></p><blockquote><p>CLTools_Executables                                                                                 1 ↵<br> package-id: com.apple.pkg.CLTools_Executables<br> version: 12.3.0.0.1.1607026830<br> volume: &#x2F;<br> location: &#x2F;<br> install-time: 1611460194<br> groups: com.apple.FindSystemFiles.pkg-group</p></blockquote><p>After doing this, you should be able to <code>brew upgrade --fetch-HEAD</code> again.</p><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Fix [Your CLT does not support macOS 11] when you are updating&amp;#x2F;upgrading brew&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    
    <category term="MaxOS" scheme="https://blog.codewalker.me/tags/MaxOS/"/>
    
  </entry>
  
  <entry>
    <title>how to install unison</title>
    <link href="https://blog.codewalker.me/2020/12/20/how-to-install-unison/"/>
    <id>https://blog.codewalker.me/2020/12/20/how-to-install-unison/</id>
    <published>2020-12-19T17:42:02.000Z</published>
    <updated>2020-12-19T17:49:47.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Let’s-rolling"><a href="#Let’s-rolling" class="headerlink" title="Let’s rolling"></a>Let’s rolling</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install ocaml ocaml-camlp4-devel ctags ctags-etags</span><br><span class="line"></span><br><span class="line">tar xvfz unison-2.48.4.tar.gz</span><br><span class="line"><span class="comment">#Edit src/Makefile.OCaml Replace</span></span><br><span class="line">CAMLFLAGS+=-g with CAMLFLAGS+=-g -unsafe-string</span><br></pre></td></tr></table></figure><h2 id="Install-unison"><a href="#Install-unison" class="headerlink" title="Install unison"></a>Install unison</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">make</span><br><span class="line"><span class="comment">#Copy unison binary to /usr/bin</span></span><br><span class="line"><span class="built_in">cp</span> unison /usr/bin/</span><br><span class="line"><span class="comment">#On the source server create SSH key-pair and copy public key to destination:</span></span><br><span class="line">    ssh-keygen</span><br><span class="line">    ssh-copy-id root@destination-ip</span><br><span class="line">    </span><br><span class="line"><span class="comment">#Following tasks are required on source server only: Edit /root/.unison/default.prf</span></span><br><span class="line"><span class="comment"># Roots of the synchronization</span></span><br><span class="line">root = /var/www</span><br><span class="line">root = ssh://192.168.0.101//var/www</span><br><span class="line"></span><br><span class="line"><span class="comment"># Paths to synchronize</span></span><br><span class="line"><span class="comment">#path = current</span></span><br><span class="line"><span class="comment">#path = common</span></span><br><span class="line"><span class="comment">#path = .netscape/bookmarks.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Some regexps specifying names and paths to ignore</span></span><br><span class="line"><span class="comment">#ignore = Path stats    ## ignores /var/www/stats</span></span><br><span class="line"><span class="comment">#ignore = Path stats/*  ## ignores /var/www/stats/*</span></span><br><span class="line"><span class="comment">#ignore = Path */stats  ## ignores /var/www/somedir/stats, but not /var/www/a/b/c/stats</span></span><br><span class="line"><span class="comment">#ignore = Name *stats   ## ignores all files/directories that end with &quot;stats&quot;</span></span><br><span class="line"><span class="comment">#ignore = Name stats*   ## ignores all files/directories that begin with &quot;stats&quot;</span></span><br><span class="line"><span class="comment">#ignore = Name *.tmp    ## ignores all files with the extension .tmp</span></span><br><span class="line"></span><br><span class="line">auto=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">batch=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">confirmbigdel=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">fastcheck=<span class="literal">true</span></span><br><span class="line">group=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">owner=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">prefer=newer</span><br><span class="line"></span><br><span class="line">silent=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">times</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># set log file</span></span><br><span class="line"><span class="built_in">log</span> = <span class="literal">true</span></span><br><span class="line">logfile = /var/log/unison.log</span><br></pre></td></tr></table></figure><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>Just run <code>unison</code><br>or you can creating a Cron Job for Unison<br>run it every 5 mins.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * /usr/bin/unison &amp;&gt; /dev/null</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Let’s-rolling&quot;&gt;&lt;a href=&quot;#Let’s-rolling&quot; class=&quot;headerlink&quot; title=&quot;Let’s rolling&quot;&gt;&lt;/a&gt;Let’s rolling&lt;/h2&gt;&lt;figure class=&quot;highlight bash</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>more commond for FIND in cli</title>
    <link href="https://blog.codewalker.me/2020/07/10/more-commond-for-FIND-in-cli/"/>
    <id>https://blog.codewalker.me/2020/07/10/more-commond-for-FIND-in-cli/</id>
    <published>2020-07-10T01:39:52.000Z</published>
    <updated>2020-07-10T02:32:51.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Bref"><a href="#Bref" class="headerlink" title="Bref"></a>Bref</h2><p>In general, Finding the file what you want to use is <code>find</code>. but there’re more.</p><h2 id="Let’s-rolling"><a href="#Let’s-rolling" class="headerlink" title="Let’s rolling"></a>Let’s rolling</h2><ol><li><p><code>locate</code></p><p> this command, it will search its own db in sys where in <code>/var/lib/mlocate/mlocate.db</code> and it will update once aday in the morning automatically.</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate locate</span><br></pre></td></tr></table></figure><p> And more. To update the db file immediately use <code>updatedb</code> when you want to update the <code>mlocate.db</code></p></li><li><p><code>which</code></p><p> To find the <code>executable</code> file in “${PATH,MANPATH}”</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> <span class="built_in">cd</span> <span class="built_in">ls</span></span><br><span class="line"><span class="comment">#cd: shell built-in command</span></span><br><span class="line"><span class="comment">#ls: aliased to ls -G</span></span><br></pre></td></tr></table></figure></li><li><p><code>whereis</code><br> To check the standard binary directories for the specified programs, printing out the paths of any it finds</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whereis <span class="built_in">ls</span></span><br><span class="line"><span class="comment">#/bin/ls</span></span><br></pre></td></tr></table></figure></li></ol><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Bref&quot;&gt;&lt;a href=&quot;#Bref&quot; class=&quot;headerlink&quot; title=&quot;Bref&quot;&gt;&lt;/a&gt;Bref&lt;/h2&gt;&lt;p&gt;In general, Finding the file what you want to use is &lt;code&gt;fin</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>multi-version nodejs in your system</title>
    <link href="https://blog.codewalker.me/2020/05/26/multi-version-nodejs-in-your-system/"/>
    <id>https://blog.codewalker.me/2020/05/26/multi-version-nodejs-in-your-system/</id>
    <published>2020-05-26T09:07:25.000Z</published>
    <updated>2020-05-26T09:22:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>Allow multi-version nodejs in your system</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>Install <code>n</code> globally in your system</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install n -g</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><ol><li><p>install stable version nodejs</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n stable</span><br></pre></td></tr></table></figure></li><li><p>install latest version nodejs</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n latest</span><br></pre></td></tr></table></figure></li><li><p>upgrade&#x2F;downgrade nodejs</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo n [version]</span><br><span class="line">// Eg. upgrade/downgrade to version 8.4.0</span><br><span class="line">// sudo n 8.4.0</span><br></pre></td></tr></table></figure></li><li><p>view all version</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n</span><br></pre></td></tr></table></figure></li></ol><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Allow multi-version nodejs in your system&lt;/p&gt;
&lt;h2 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h2&gt;&lt;p&gt;I</summary>
      
    
    
    
    
    <category term="shell" scheme="https://blog.codewalker.me/tags/shell/"/>
    
    <category term="nodejs" scheme="https://blog.codewalker.me/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>how much should I pay for v2ray cloudflare namesilo google cloud platformg cp</title>
    <link href="https://blog.codewalker.me/2020/04/26/how-much-should-I-pay-for-v2ray-cloudflare-namesilo-google-cloud-platformg-cp/"/>
    <id>https://blog.codewalker.me/2020/04/26/how-much-should-I-pay-for-v2ray-cloudflare-namesilo-google-cloud-platformg-cp/</id>
    <published>2020-04-26T07:55:53.000Z</published>
    <updated>2020-04-26T08:50:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hi to new way to see the world</p><h2 id="how-much-should-I-pay-for-it"><a href="#how-much-should-I-pay-for-it" class="headerlink" title="how much should I pay for it"></a>how much should I pay for it</h2><p>the answer is only <strong>ONE DOLLAR</strong><br>Let me be clear and follow me step by step</p><h2 id="0-Preparation"><a href="#0-Preparation" class="headerlink" title="0 Preparation"></a>0 Preparation</h2><p>register your account on google cloudflare and namesilo. Those accounts you will do it by yourself.<br>if you no know how to, pls goole it.</p><ul><li>Namesilo for your domain service. For example your domain is <code>codewalker.me</code>.this is the only step you should pay for.</li><li>Google for virtual machine. Create a <code>vm</code> for you</li><li>Cloudflare for you CDN service. Set you domain’s <code>name server</code> to Cloudflare.</li></ul><h2 id="1-Setup-everything"><a href="#1-Setup-everything" class="headerlink" title="1 Setup everything"></a>1 Setup everything</h2><ol><li>GCP<ol><li>find you <strong>ip</strong> address in your new <code>vm</code> on gcp and login it via ssh on your browser.</li></ol></li><li>Namesilo<ol><li>Login to Namesilo, it will ask you for set your domain name server on it.</li></ol></li><li>Cloudflare<ol><li>add a <code>A record</code> for example we call <code>blog</code> to your <code>vm</code>‘s ip.</li></ol></li></ol><h2 id="2-Install-v2ray-on-you-vm"><a href="#2-Install-v2ray-on-you-vm" class="headerlink" title="2 Install v2ray on you vm"></a>2 Install v2ray on you <code>vm</code></h2><p>run this on your <code>vm</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -i <span class="comment">#change your role as root</span></span><br><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure><p>this script will ask you a few questions step by step.</p><ol><li>Install or unstaill. Chois 1 for install</li><li>Mode for your v2ray <strong>important</strong>. chois 4 for <code>WebSocket+TLS+Web</code></li><li>type in your domain <code>blog.codewalker.me</code> then it will ask is it readly point to your <code>IP</code></li><li>run <code>v2ray url</code> when everything done. and copy the url like <code>vmess://xxxxxxxx</code></li><li>on your client. For me, I’m using v2rayU. you should add a new configuration.<br>EOF<br>Enjoy<br>I, simon love this world ❤️</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hi to new way to see the world&lt;/p&gt;
&lt;h2 id=&quot;how-much-should-I-pay-for-it&quot;&gt;&lt;a href=&quot;#how-much-should-I-pay-for-it&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
    <category term="shell" scheme="https://blog.codewalker.me/tags/shell/"/>
    
    <category term="gcp" scheme="https://blog.codewalker.me/tags/gcp/"/>
    
  </entry>
  
  <entry>
    <title>play with tornado</title>
    <link href="https://blog.codewalker.me/2020/04/22/play-with-tornado/"/>
    <id>https://blog.codewalker.me/2020/04/22/play-with-tornado/</id>
    <published>2020-04-22T15:27:12.000Z</published>
    <updated>2020-04-22T15:37:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hello tornado world</p><h2 id="0-install-tornado"><a href="#0-install-tornado" class="headerlink" title="0. install tornado"></a>0. install tornado</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install tornado</span><br></pre></td></tr></table></figure><h2 id="1-Write-code"><a href="#1-Write-code" class="headerlink" title="1. Write code"></a>1. Write code</h2><p>Saving those code below as server.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2020-04-22 23:35:44</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.me)</span></span><br><span class="line"><span class="comment"># @Link    : http://blog.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">import</span> tornado.ioloop</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">basicRequestHandler</span>(tornado.web.RequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        self.write(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">staticRequestHandler</span>(tornado.web.RequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        self.render(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">queryStringRequestHandler</span>(tornado.web.RequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        n = <span class="built_in">int</span>(self.get_argument(<span class="string">&#x27;n&#x27;</span>))</span><br><span class="line">        result = <span class="string">&#x27;odd&#x27;</span> <span class="keyword">if</span> n % <span class="number">2</span> <span class="keyword">else</span> <span class="string">&#x27;even&#x27;</span></span><br><span class="line">        self.write(<span class="string">&#x27;ths number &#123;&#125; is &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(n,result))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">resourceRequestHandler</span>(tornado.web.RequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self, mid</span>):</span><br><span class="line">        self.write(<span class="string">&quot;Hey we got id: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(mid))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    app = tornado.web.Application([</span><br><span class="line">        (<span class="string">r&#x27;/&#x27;</span>, basicRequestHandler),</span><br><span class="line">        (<span class="string">r&#x27;/static&#x27;</span>, staticRequestHandler),</span><br><span class="line">        (<span class="string">r&#x27;/query&#x27;</span>, queryStringRequestHandler),</span><br><span class="line">        (<span class="string">r&#x27;/resource/([0-9]+)&#x27;</span>, resourceRequestHandler)</span><br><span class="line">    ])</span><br><span class="line">    app.listen(<span class="number">8081</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;server is turn on and listening port 8081&#x27;</span>)</span><br><span class="line">    tornado.ioloop.IOLoop.current().start()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="2-Run-code"><a href="#2-Run-code" class="headerlink" title="2. Run code"></a>2. Run code</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x server.py</span><br><span class="line">python3 server.py</span><br></pre></td></tr></table></figure><h2 id="3-view-your-first-web-appliction-with-tornado"><a href="#3-view-your-first-web-appliction-with-tornado" class="headerlink" title="3. view your first web appliction with tornado"></a>3. view your first web appliction with tornado</h2><p>Hit the url with your fever browser</p><ul><li><code>http://127.0.0.1:8081/</code></li><li><code>http://127.0.0.1:8081/static</code></li><li><code>http://127.0.0.1:8081/query?n=3</code></li><li><code>http://127.0.0.1:8081/resource/3</code></li></ul><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hello tornado world&lt;/p&gt;
&lt;h2 id=&quot;0-install-tornado&quot;&gt;&lt;a href=&quot;#0-install-tornado&quot; class=&quot;headerlink&quot; title=&quot;0. install tornado&quot;&gt;&lt;/a&gt;0. inst</summary>
      
    
    
    
    
    <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
    <category term="tornado" scheme="https://blog.codewalker.me/tags/tornado/"/>
    
  </entry>
  
  <entry>
    <title>Public key for jenkins-2.232-1.1.noarch.rpm is not installed</title>
    <link href="https://blog.codewalker.me/2020/04/19/Public-key-for-jenkins-2-232-1-1-noarch-rpm-is-not-installed/"/>
    <id>https://blog.codewalker.me/2020/04/19/Public-key-for-jenkins-2-232-1-1-noarch-rpm-is-not-installed/</id>
    <published>2020-04-19T13:44:12.000Z</published>
    <updated>2020-04-19T13:51:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>How to fix <code>Public key for jenkins-2.232-1.1.noarch.rpm is not installed</code><br>when you update your system by running yum</p><p>what you should to do the only thing is import the <code>key file</code> from jenkins offical website</p><p>run this command as root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key</span><br></pre></td></tr></table></figure><p>This’s all done.<br>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;How to fix &lt;code&gt;Public key for jenkins-2.232-1.1.noarch.rpm is not installed&lt;/code&gt;&lt;br&gt;when you update your system by running yum&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
    <category term="rpm" scheme="https://blog.codewalker.me/tags/rpm/"/>
    
    <category term="centos" scheme="https://blog.codewalker.me/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>Build python 3.6 based on alpine</title>
    <link href="https://blog.codewalker.me/2020/04/01/Build-python-3-6-based-on-alpine/"/>
    <id>https://blog.codewalker.me/2020/04/01/Build-python-3-6-based-on-alpine/</id>
    <published>2020-04-01T07:19:38.000Z</published>
    <updated>2020-04-01T09:10:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Files:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; tree</span><br><span class="line">.</span><br><span class="line">├── Dockerfile</span><br><span class="line">└── Python-3.6.10.tar.xz</span><br></pre></td></tr></table></figure><h2 id="1-Preparation"><a href="#1-Preparation" class="headerlink" title="1. Preparation"></a>1. Preparation</h2><ul><li>Make a new dir for your work</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> alpine_python3.6.10</span><br><span class="line"><span class="built_in">cd</span> alpine_python3.6.10</span><br></pre></td></tr></table></figure><ul><li>Download python souce code tar-ball.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">&#x27;https://www.python.org/ftp/python/3.6.10/Python-3.6.10.tar.xz&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>cp &amp; past <code>Dockerfile</code> below.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine:latest AS alpine_py3.6</span><br><span class="line"></span><br><span class="line">COPY ./Python-3.6.10.tar.xz /root</span><br><span class="line">WORKDIR /root</span><br><span class="line"></span><br><span class="line">RUN \</span><br><span class="line">    sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27;</span> /etc/apk/repositories \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;ipv6&quot;</span> &gt;&gt; /etc/modules</span><br><span class="line">RUN \</span><br><span class="line">    apk update \ &amp;&amp; apk upgrade \</span><br><span class="line">    &amp;&amp; apk add --no-cache bash gcc libffi-dev python-dev openssl-dev make zlib-dev libc-dev bash-doc bash-completion \</span><br><span class="line">    &amp;&amp; <span class="built_in">rm</span> -rf /var/cache/apk/* \</span><br><span class="line">    &amp;&amp; tar -xf Python-3.6.10.tar.xz \</span><br><span class="line">    &amp;&amp; <span class="built_in">rm</span> -rf Python-3.6.10.tar.xz \</span><br><span class="line">    &amp;&amp; <span class="built_in">cd</span> Python-3.6.10 \</span><br><span class="line">    &amp;&amp; ./configure --enable-optimizations \</span><br><span class="line">    &amp;&amp; make -j 8 \</span><br><span class="line">    &amp;&amp; make install \</span><br><span class="line">    &amp;&amp; pip3 install --upgrade pip \</span><br><span class="line">    &amp;&amp; <span class="built_in">rm</span> -rf /root/Python-3.6.10</span><br><span class="line">CMD /bin/sh</span><br></pre></td></tr></table></figure><h2 id="2-Build-image"><a href="#2-Build-image" class="headerlink" title="2. Build image"></a>2. Build image</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t alpine:python3.6.10 .</span><br></pre></td></tr></table></figure><h2 id="3-Play-with-your-new-alpine-python3-6-10"><a href="#3-Play-with-your-new-alpine-python3-6-10" class="headerlink" title="3. Play with your new alpine:python3.6.10"></a>3. Play with your new alpine:python3.6.10</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd alpine:python3.6.10</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Files:&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
    <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
    <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>play with supervisord</title>
    <link href="https://blog.codewalker.me/2020/03/17/play-with-supervisord/"/>
    <id>https://blog.codewalker.me/2020/03/17/play-with-supervisord/</id>
    <published>2020-03-17T00:44:13.000Z</published>
    <updated>2020-03-17T01:11:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Files:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; tree</span><br><span class="line">.</span><br><span class="line">├── requirements.txt</span><br><span class="line">└── supervisord</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>++File requirements.txt++</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt;=4.1.0</span><br></pre></td></tr></table></figure><h2 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h2><p>Install supervisord by pip3, in your terminal run this</p><p><code>pip3 install -r requirements.txt</code></p><h2 id="2-The-conf"><a href="#2-The-conf" class="headerlink" title="2. The .conf"></a>2. The .conf</h2><p>Write <code>supervisord.conf</code> for yourself. In this case, it would be check the status of <code>gunicorn</code>.</p><p>++File supervisord.conf++</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[supervisord]</span><br><span class="line">logfile=/code/logs/supervisord/supervisord.log     ; (main <span class="built_in">log</span> file;default <span class="variable">$CWD</span>/supervisord.log)</span><br><span class="line">logfile_maxbytes=0              ; (max main logfile bytes b4 rotation;default 50MB)</span><br><span class="line">logfile_backups=10                  ; (num of main logfile rotation backups;default 10)</span><br><span class="line">loglevel=info                       ; (<span class="built_in">log</span> level;default info; others: debug,warn,trace)</span><br><span class="line">pidfile=/code/supervisord/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</span><br><span class="line">nodaemon=<span class="literal">true</span>                      ; (start <span class="keyword">in</span> foreground <span class="keyword">if</span> <span class="literal">true</span>;default <span class="literal">false</span>)</span><br><span class="line">minfds=1024                         ; (min. avail startup file descriptors;default 1024)</span><br><span class="line">minprocs=200                        ; (min. avail process descriptors;default 200)</span><br><span class="line">nocleanup=<span class="literal">false</span>                     ; (don<span class="string">&#x27;t clean up tempfiles at start;default false)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[program:gunicorn]</span></span><br><span class="line"><span class="string">startsecs = 2</span></span><br><span class="line"><span class="string">autorestart = true</span></span><br><span class="line"><span class="string">command=gunicorn -c gunicorn.conf.py wolfeye.wsgi:application</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h2 id="3-Fire-the-rocket"><a href="#3-Fire-the-rocket" class="headerlink" title="3. Fire the rocket"></a>3. Fire the rocket</h2><p><code>supervisord -c supervisord.conf</code></p><h2 id="4-Watch-the-logs"><a href="#4-Watch-the-logs" class="headerlink" title="4. Watch the logs"></a>4. Watch the logs</h2><p><code>tail -F /code/logs/supervisord/supervisord.log</code></p><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Files:&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
    <category term="supervisord" scheme="https://blog.codewalker.me/tags/supervisord/"/>
    
  </entry>
  
  <entry>
    <title>scalable web container with haproxy</title>
    <link href="https://blog.codewalker.me/2020/03/16/scalable-web-container-with-haproxy/"/>
    <id>https://blog.codewalker.me/2020/03/16/scalable-web-container-with-haproxy/</id>
    <published>2020-03-16T13:19:54.000Z</published>
    <updated>2020-03-16T13:30:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Files:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; tree</span><br><span class="line">.</span><br><span class="line">├── app.py</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">└── web.Dockerfile</span><br></pre></td></tr></table></figure><ul><li>docker-compose.yml</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    image: redis</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  web:</span><br><span class="line">    build:</span><br><span class="line">      context: .</span><br><span class="line">      dockerfile: web.Dockerfile</span><br><span class="line">    depends_on: </span><br><span class="line">      - redis</span><br><span class="line">    environment:</span><br><span class="line">      REDIS_HOST: redis</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  lb:</span><br><span class="line">    image: dockercloud/haproxy</span><br><span class="line">    links:</span><br><span class="line">      - web</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    depends_on: </span><br><span class="line">      - web</span><br><span class="line">    volumes:</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><ul><li>app.py</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from redis import Redis</span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">redis = Redis(host=os.environ.get(<span class="string">&#x27;REDIS_HOST&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>), port=6379)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def hello():</span><br><span class="line">    redis.incr(<span class="string">&#x27;hits&#x27;</span>)</span><br><span class="line">    <span class="built_in">return</span> <span class="string">&#x27;Hello Container World! I have been seen %s times and my hostname is %s.\n&#x27;</span> % (redis.get(<span class="string">&#x27;hits&#x27;</span>),socket.gethostname())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=8000, debug=True)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>web.Dockerfile</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM python:2.7</span><br><span class="line">LABEL maintaner=<span class="string">&quot;simon.xie@codewalker.me&quot;</span></span><br><span class="line">COPY . /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">RUN python -m pip install --upgrade pip &amp;&amp; pip install flask redis</span><br><span class="line">EXPOSE 8000</span><br><span class="line">CMD [ <span class="string">&quot;python&quot;</span>, <span class="string">&quot;app.py&quot;</span> ]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="How-to-run"><a href="#How-to-run" class="headerlink" title="How to run"></a>How to run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>then you should see something like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker-compose up</span><br><span class="line">Starting scale_redis_1 ... <span class="keyword">done</span></span><br><span class="line">Starting scale_web_1   ... <span class="keyword">done</span></span><br><span class="line">Starting scale_lb_1    ... <span class="keyword">done</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">lb_1     |   maxconn 4096</span><br><span class="line">lb_1     |   default_backend default_service</span><br><span class="line">lb_1     | backend default_service</span><br><span class="line">lb_1     |   server scale_web_1 scale_web_1:80 check inter 2000 rise 2 fall 3</span><br><span class="line">lb_1     | INFO:haproxy:Launching HAProxy</span><br><span class="line">lb_1     | INFO:haproxy:HAProxy has been launched(PID: 9)</span><br><span class="line">lb_1     | INFO:haproxy:===========END===========</span><br></pre></td></tr></table></figure><h2 id="How-to-see"><a href="#How-to-see" class="headerlink" title="How to see"></a>How to see</h2><p>Open 127.0.0.1 in your browser whatever you like.</p><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Files:&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    
    <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
    <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
    <category term="redis" scheme="https://blog.codewalker.me/tags/redis/"/>
    
    <category term="flask" scheme="https://blog.codewalker.me/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Install JDK8 on Macos</title>
    <link href="https://blog.codewalker.me/2019/11/26/Install-JDK8-on-Macos/"/>
    <id>https://blog.codewalker.me/2019/11/26/Install-JDK8-on-Macos/</id>
    <published>2019-11-26T02:17:14.000Z</published>
    <updated>2019-11-26T02:24:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><h2 id="Bref"><a href="#Bref" class="headerlink" title="Bref"></a>Bref</h2><ul><li>Install adoptopenjdk8</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install adoptopenjdk</span><br></pre></td></tr></table></figure><ul><li>Set HEAD version of jdk</li></ul><p>Install HEAD version</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#To activate jenv, add the following to your ~/.zshrc:</span></span><br><span class="line">  <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/.jenv/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line">  <span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(jenv init -)</span>&quot;</span></span><br><span class="line">  <span class="comment">###############</span></span><br><span class="line">  <span class="built_in">source</span> ~/.zshrc</span><br><span class="line">  <span class="comment">### add jkd8 in</span></span><br><span class="line">  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/</span><br><span class="line">  <span class="comment"># set jdk8 to head</span></span><br><span class="line">  jenv global 1.8</span><br><span class="line">  <span class="comment"># cheak your jdk env</span></span><br><span class="line">  &gt; java -version</span><br><span class="line">  openjdk version <span class="string">&quot;1.8.0_232&quot;</span></span><br><span class="line">  OpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_232-b09)</span><br><span class="line">  OpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.232-b09, mixed mode)</span><br></pre></td></tr></table></figure><p>EOF</p><p>Enjoy</p><p>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;h2 id=&quot;Bref&quot;&gt;&lt;a href=&quot;#Bref&quot;</summary>
      
    
    
    
    
    <category term="java" scheme="https://blog.codewalker.me/tags/java/"/>
    
    <category term="macos" scheme="https://blog.codewalker.me/tags/macos/"/>
    
    <category term="brew" scheme="https://blog.codewalker.me/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>play PostgreSQL with docker -- getting started</title>
    <link href="https://blog.codewalker.me/2019/11/08/play-PostgreSQL-with-docker-getting-started/"/>
    <id>https://blog.codewalker.me/2019/11/08/play-PostgreSQL-with-docker-getting-started/</id>
    <published>2019-11-08T02:53:59.000Z</published>
    <updated>2019-11-08T03:01:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo systemctl status docker</span><br><span class="line">[sudo] password <span class="keyword">for</span> codewalker:</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: http://docs.docker.com</span><br><span class="line">➜  ~ sudo systemctl start docker</span><br><span class="line">➜  ~ sudo docker run --name postgre_demo -e POSTGRES_PASSWORD=password1  -d postgres</span><br><span class="line">7e980bd0d15b484feda9076a9e40184bfdc54dee9a1ff64f30792ae586e62259</span><br><span class="line">➜  ~ sudo docker container <span class="built_in">ls</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">7e980bd0d15b        postgres            <span class="string">&quot;docker-entrypoint...&quot;</span>   42 seconds ago      Up 41 seconds       5432/tcp            postgre_demo</span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it postgre_demo psql -U postgres</span><br><span class="line">psql (12.0 (Debian 12.0-2.pgdg100+1))</span><br><span class="line">Type <span class="string">&quot;help&quot;</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line">postgres=<span class="comment"># CREATE DATABASE demo_db1;</span></span><br><span class="line">CREATE DATABASE</span><br><span class="line">postgres=<span class="comment"># \c demo_db1;</span></span><br><span class="line">You are now connected to database <span class="string">&quot;demo_db1&quot;</span> as user <span class="string">&quot;postgres&quot;</span>.</span><br><span class="line">demo_db1=<span class="comment"># CREATE TABLE demo_t(someting int);</span></span><br><span class="line">CREATE TABLE</span><br><span class="line">demo_db1=<span class="comment"># insert into demo_t(something) values (1);</span></span><br><span class="line">ERROR:  column <span class="string">&quot;something&quot;</span> of relation <span class="string">&quot;demo_t&quot;</span> does not exist</span><br><span class="line">LINE 1: insert into demo_t(something) values (1);</span><br><span class="line">                           ^</span><br><span class="line">demo_db1=<span class="comment"># INSERT INTO demo_t (someting) values (1);</span></span><br><span class="line">INSERT 0 1</span><br><span class="line">demo_db1=<span class="comment"># \dt</span></span><br><span class="line">         List of relations</span><br><span class="line"> Schema |  Name  | Type  |  Owner</span><br><span class="line">--------+--------+-------+----------</span><br><span class="line"> public | demo_t | table | postgres</span><br><span class="line">(1 row)</span><br><span class="line">demo_db1=<span class="comment"># select someting from demo_t;</span></span><br><span class="line"> someting</span><br><span class="line">----------</span><br><span class="line">        1</span><br><span class="line">(1 row)</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">================================================</span><br><span class="line">sudo docker container stop postgre_demo</span><br><span class="line">postgre_demo</span><br><span class="line">➜  ~ sudo docker container <span class="built_in">rm</span> postgre_demo</span><br><span class="line">postgre_demo</span><br><span class="line">➜  ~ sudo docker container <span class="built_in">ls</span> -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">sudo <span class="built_in">mkdir</span> /opt/postgresqldb</span><br><span class="line">➜  ~ <span class="built_in">touch</span> postgresql.demo.sql</span><br><span class="line">➜  ~ <span class="built_in">cat</span> postgresql.demo.sql</span><br><span class="line">CREATE TABLE demo_t(something int);</span><br><span class="line">INSERT INTO demo_t (something) VALUSE (1);</span><br><span class="line">➜  ~ sudo docker run --name postgres_demo -v /opt/postgresqldb:/opt/demo/ -e POSTGRES_PASSWORD=password1 -d postgres</span><br><span class="line">e4ef75836b9fb13c9aa5a283d449c0156b7fd053ef902d06f2479453f0613264</span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it postgres_demo psql -U postgres -c <span class="string">&quot;CREATE DATABASE demo_db2;&quot;</span></span><br><span class="line">CREATE DATABASE</span><br><span class="line">➜  ~ sudo docker container ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">e4ef75836b9f        postgres            <span class="string">&quot;docker-entrypoint...&quot;</span>   32 seconds ago      Up 30 seconds       5432/tcp            postgres_demo</span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it e4e /bin/bash</span><br><span class="line">root@e4ef75836b9f:/<span class="comment"># cd /opt/demo/</span></span><br><span class="line">root@e4ef75836b9f:/opt/demo<span class="comment"># ls</span></span><br><span class="line">postgresql.demo.sql</span><br><span class="line">root@e4ef75836b9f:/opt/demo<span class="comment"># cat postgresql.demo.sql</span></span><br><span class="line">\c demo_db2;</span><br><span class="line">CREATE TABLE demo_t(something int);</span><br><span class="line">INSERT INTO demo_t (something) VALUES (1);</span><br><span class="line">root@e4ef75836b9f:/opt/demo<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">root@e95aa0b8940a:/opt/demo<span class="comment">#</span></span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it postgres_demo psql -U postgres -f /opt/demo/postgresql.demo.sql</span><br><span class="line">You are now connected to database <span class="string">&quot;demo_db2&quot;</span> as user <span class="string">&quot;postgres&quot;</span>.</span><br><span class="line">CREATE TABLE</span><br><span class="line">INSERT 0 1</span><br><span class="line">sudo docker <span class="built_in">exec</span> -it postgre_demo psql -U postgres</span><br><span class="line">psql (12.0 (Debian 12.0-2.pgdg100+1))</span><br><span class="line">Type <span class="string">&quot;help&quot;</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line">postgres=<span class="comment"># select datname from pg_database;</span></span><br><span class="line">  datname</span><br><span class="line">-----------</span><br><span class="line"> postgres</span><br><span class="line"> demo_db2</span><br><span class="line"> template1</span><br><span class="line"> template0</span><br><span class="line">(4 rows)</span><br><span class="line">postgres=<span class="comment"># \c demo_db2</span></span><br><span class="line">You are now connected to database <span class="string">&quot;demo_db2&quot;</span> as user <span class="string">&quot;postgres&quot;</span>.</span><br><span class="line">demo_db2=<span class="comment"># SELECT table_name FROM information_schema.tables WHERE table_schema = &#x27;public&#x27;;</span></span><br><span class="line"> table_name</span><br><span class="line">------------</span><br><span class="line"> demo_t</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># \d</span></span><br><span class="line">         List of relations</span><br><span class="line"> Schema |  Name  | Type  |  Owner</span><br><span class="line">--------+--------+-------+----------</span><br><span class="line"> public | demo_t | table | postgres</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># SELECT column_name FROM information_schema.columns WHERE table_name =&#x27;demo_t&#x27;;</span></span><br><span class="line"> column_name</span><br><span class="line">-------------</span><br><span class="line"> something</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># select something from demo_t;</span></span><br><span class="line"> something</span><br><span class="line">-----------</span><br><span class="line">         1</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># exit</span></span><br><span class="line">➜  ~ sudo docker container ps</span><br><span class="line">[sudo] password <span class="keyword">for</span> codewalker:</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">e4ef75836b9f        postgres            <span class="string">&quot;docker-entrypoint...&quot;</span>   12 minutes ago      Up 12 minutes       5432/tcp            postgres_demo</span><br><span class="line">➜  ~ sudo docker container stop e4ef75836b9f</span><br><span class="line">e4ef75836b9f</span><br><span class="line">➜  ~ sudo docker container <span class="built_in">rm</span> e4e</span><br><span class="line">e4e</span><br><span class="line">➜  ~ sudo docker container ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;figure class=&quot;highlight bash</summary>
      
    
    
    
    
    <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
    <category term="database" scheme="https://blog.codewalker.me/tags/database/"/>
    
    <category term="postgresql" scheme="https://blog.codewalker.me/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>simple web log analyzer</title>
    <link href="https://blog.codewalker.me/2019/11/07/simple-web-log-analyzer/"/>
    <id>https://blog.codewalker.me/2019/11/07/simple-web-log-analyzer/</id>
    <published>2019-11-07T03:51:37.000Z</published>
    <updated>2019-11-08T03:00:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Go and hit <a href="http://motelacc.codewalker.me/">Simple website analyzer</a></p><h2 id="The-Point-of-Technique"><a href="#The-Point-of-Technique" class="headerlink" title="The Point of Technique"></a>The Point of Technique</h2><ul><li>goaccess: GoAccess is an open source real-time web log analyzer and interactive viewer that runs in a terminal in *nix systems or through your browser.</li><li>shell: Creating the file of analysis result.</li><li>nginx: web server.</li></ul><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Go and hit &lt;a href=&quot;http:/</summary>
      
    
    
    
    
    <category term="bash" scheme="https://blog.codewalker.me/tags/bash/"/>
    
    <category term="nginx" scheme="https://blog.codewalker.me/tags/nginx/"/>
    
    <category term="goaccess" scheme="https://blog.codewalker.me/tags/goaccess/"/>
    
  </entry>
  
  <entry>
    <title>new CD/CI example</title>
    <link href="https://blog.codewalker.me/2019/11/05/new-CD-CI-example/"/>
    <id>https://blog.codewalker.me/2019/11/05/new-CD-CI-example/</id>
    <published>2019-11-05T04:20:54.000Z</published>
    <updated>2019-11-07T02:55:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>This example just for interviewer.It’s triggered by post-receive.</p><h2 id="Run-flow"><a href="#Run-flow" class="headerlink" title="Run flow"></a>Run flow</h2><ul><li><p>Local push -&gt; Git host -&gt; post-receive -&gt; Jenkins -&gt; shell</p></li><li><p><a href="http://motel.codewalker.me/">Simple website</a></p></li><li><p><a href="http://jkens.codewalker.me/">Jenkins website</a></p></li></ul><h2 id="The-Point-of-Technique"><a href="#The-Point-of-Technique" class="headerlink" title="The Point of Technique"></a>The Point of Technique</h2><ul><li>git<ul><li>post-receive: Git will trigger jenkins to do somethins.</li></ul></li><li>jenkins<ul><li>Git will call me when it fired.</li></ul></li><li>shell<ul><li>this script will do somethins when jenkins has been called.</li></ul></li><li>nginx<ul><li>Do some sutff after jenkins deployment doen.</li></ul></li><li>vue<ul><li>Build on local then push <strong>dists</strong> to Git host, a simple html example.</li></ul></li></ul><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;This example just for inte</summary>
      
    
    
    
    
    <category term="bash" scheme="https://blog.codewalker.me/tags/bash/"/>
    
    <category term="jenkins" scheme="https://blog.codewalker.me/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>docker-zsh-completion with oh-my-zsh</title>
    <link href="https://blog.codewalker.me/2019/10/30/docker-zsh-completion-with-oh-my-zsh/"/>
    <id>https://blog.codewalker.me/2019/10/30/docker-zsh-completion-with-oh-my-zsh/</id>
    <published>2019-10-30T01:25:30.000Z</published>
    <updated>2019-10-30T01:38:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h1><p>You just need to enable the plugin in ‘oh-my-zsh’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 1</span></span><br><span class="line"><span class="comment"># mkdir &amp;&amp; download the _docker file if there isn&#x27;t existed in this path&#x27;~/.oh-my-zsh/plugins/docker/_docker&#x27;</span></span><br><span class="line">curl -fLo ~/.oh-my-zsh/plugins/docker/_docker https://raw.github.com/felixr/docker-zsh-completion/master/_docker</span><br><span class="line"><span class="comment"># Step 2</span></span><br><span class="line"><span class="comment"># Enable the plug</span></span><br><span class="line"><span class="comment"># open ~/.zshrc and find line which is similar with plugins=(git osx autojump), then you need to add docker into that setting like this below.</span></span><br><span class="line">plugins=(git osx autojump docker)</span><br><span class="line"><span class="comment"># Step 3</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h1&gt;&lt;p&gt;You just need to enable th</summary>
      
    
    
    
    
    <category term="bash" scheme="https://blog.codewalker.me/tags/bash/"/>
    
    <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
    <category term="oh-my-zsh" scheme="https://blog.codewalker.me/tags/oh-my-zsh/"/>
    
  </entry>
  
  <entry>
    <title>how to use &#39;left join&#39; with multi-condition</title>
    <link href="https://blog.codewalker.me/2019/05/31/how-to-use-left-join-with-multi-condition/"/>
    <id>https://blog.codewalker.me/2019/05/31/how-to-use-left-join-with-multi-condition/</id>
    <published>2019-05-31T03:20:03.000Z</published>
    <updated>2019-05-31T03:42:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,amount FROM product</span><br><span class="line">LEFT JOIN product_details</span><br><span class="line">    ON  (product.id = product_details.id)</span><br><span class="line">        AND product_details.id=2;</span><br></pre></td></tr></table></figure><p>EOF</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h1&gt;&lt;figure class=&quot;highlight plai</summary>
      
    
    
    
    
    <category term="mysql" scheme="https://blog.codewalker.me/tags/mysql/"/>
    
    <category term="database" scheme="https://blog.codewalker.me/tags/database/"/>
    
  </entry>
  
</feed>
